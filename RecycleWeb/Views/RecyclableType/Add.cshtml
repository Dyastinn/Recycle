@model RecycleWeb.RecyclableType

@{
    ViewBag.Title = "Add";
}


@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()

    <div class="container-fluid">
        <!-- Use container-fluid for full-width layout -->
        <div class="card shadow border-primary mt-4">
            <div class="card-body p-4">
                <h4 class="text-center">Create Recyclable Type</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group row">
                    <!-- Add row class for grid layout -->
                    @Html.LabelFor(model => model.Id, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Id, new { htmlAttributes = new { @class = "form-control shadow" } })
                        @Html.ValidationMessageFor(model => model.Id, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Type, new { htmlAttributes = new { @class = "form-control shadow" } })
                        @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.Rate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Rate, new { htmlAttributes = new { @class = "form-control shadow" } })
                        @Html.ValidationMessageFor(model => model.Rate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.MinKg, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.MinKg, new { htmlAttributes = new { @class = "form-control shadow" } })
                        @Html.ValidationMessageFor(model => model.MinKg, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.MaxKg, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.MaxKg, new { htmlAttributes = new { @class = "form-control shadow" } })
                        @Html.ValidationMessageFor(model => model.MaxKg, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    <div class="col-md-offset-2 col-md-10">
                        <button type="submit" class="btn btn-primary form-control border">Create</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
}



<div>
    @Html.ActionLink("Back to List", "List")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
